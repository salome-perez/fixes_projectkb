public class SpringWebserviceConsumer {
    public void invoke(MessageContext messageContext) throws Exception {
        Exchange exchange = getEndpoint().createExchange(ExchangePattern.InOptionalOut);
        populateExchangeFromMessageContext(messageContext, exchange);

        // start message processing
        getProcessor().process(exchange);

        if (exchange.getException() != null) {
            throw exchange.getException();
        } else if (exchange.getPattern().isOutCapable()) {
            Message responseMessage = exchange.hasOut() ? exchange.getOut(Message.class) : exchange.getIn(Message.class);
            if (responseMessage != null) {
                Source responseBody = responseMessage.getBody(Source.class);
                WebServiceMessage response = messageContext.getResponse();

                configuration.getMessageFilter().filterConsumer(exchange, response);

                XmlConverter xmlConverter = configuration.getXmlConverter();
                xmlConverter.toResult(responseBody, response.getPayloadResult());
            }
        }

    }

}