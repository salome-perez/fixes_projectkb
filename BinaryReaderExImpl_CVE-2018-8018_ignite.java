public class BinaryReaderExImpl {
    public BinarySchema getOrCreateSchema() {
        BinarySchema schema = ctx.schemaRegistry(typeId).schema(schemaId);

        if (schema == null) {
            if (fieldIdLen != BinaryUtils.FIELD_ID_LEN) {
                BinaryTypeImpl type = (BinaryTypeImpl) ctx.metadata(typeId, schemaId);

                BinaryMetadata meta = type != null ? type.metadata() : null;

                if (type == null || meta == null)
                    throw new BinaryObjectException("Cannot find metadata for object with compact footer: " +
                        typeId);

                Collection<BinarySchema> existingSchemas = meta.schemas();

                for (BinarySchema existingSchema : existingSchemas) {
                    if (schemaId == existingSchema.schemaId()) {
                        schema = existingSchema;

                        break;
                    }
                }

                if (schema == null) {
                    List<Integer> existingSchemaIds = new ArrayList<>(existingSchemas.size());

                    for (BinarySchema existingSchema : existingSchemas)
                        existingSchemaIds.add(existingSchema.schemaId());


                    throw new BinaryObjectException("Cannot find schema for object with compact footer" +
                        " [typeName=" + type.typeName() +
                        ", typeId=" + typeId +
                        ", missingSchemaId=" + schemaId +
                        ", existingSchemaIds=" + existingSchemaIds + ']'
                    );
                }
            }
            else
                schema = createSchema();

            assert schema != null;

            ctx.schemaRegistry(typeId).addSchema(schemaId, schema);
        }

        return schema;
    }

}