public class UniqueConstraintsResponse {
    public void write(org.apache.thrift.protocol.TProtocol prot, UniqueConstraintsResponse struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      {
        oprot.writeI32(struct.uniqueConstraints.size());
        for (SQLUniqueConstraint _iter332 : struct.uniqueConstraints)
        {
          _iter332.write(oprot);
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UniqueConstraintsResponse struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TList _list333 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.uniqueConstraints = new ArrayList<SQLUniqueConstraint>(_list333.size);
        SQLUniqueConstraint _elem334;
        for (int _i335 = 0; _i335 < _list333.size; ++_i335)
        {
          _elem334 = new SQLUniqueConstraint();
          _elem334.read(iprot);
          struct.uniqueConstraints.add(_elem334);
        }
      }
      struct.setUniqueConstraintsIsSet(true);
    }

}