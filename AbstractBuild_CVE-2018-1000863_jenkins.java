public class AbstractBuild {


    protected Lease decideWorkspace(@Nonnull Node n, WorkspaceList wsl) throws InterruptedException, IOException {
        String customWorkspace = getProject().getCustomWorkspace();
        if (customWorkspace != null) {
            FilePath rootPath = n.getRootPath();
            if (rootPath == null) {
                throw new AbortException(n.getDisplayName() + " seems to be offline");
            }
            // we allow custom workspaces to be concurrently used between jobs.
            return Lease.createDummyLease(rootPath.child(getEnvironment(listener).expand(customWorkspace)));
        }
        // TODO: this cast is indicative of abstraction problem
        FilePath ws = n.getWorkspaceFor((TopLevelItem) getProject());
        if (ws == null) {
            throw new AbortException(n.getDisplayName() + " seems to be offline");
        }
        return wsl.allocate(ws, getBuild());
    }

}