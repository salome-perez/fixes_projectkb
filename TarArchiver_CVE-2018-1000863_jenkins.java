public class TarArchiver {
    public void visit(File file, String relativePath) throws IOException {
        if(Functions.isWindows())
            relativePath = relativePath.replace('\\','/');

        if(file.isDirectory())
            relativePath+='/';
        TarArchiveEntry te = new TarArchiveEntry(relativePath);
        int mode = IOUtils.mode(file);
        if (mode!=-1)   te.setMode(mode);
        te.setModTime(file.lastModified());
        long size = 0;

        if (!file.isDirectory()) {
            size = file.length();
            te.setSize(size);
        }
        tar.putArchiveEntry(te);
        try {
            if (!file.isDirectory()) {
                // ensure we don't write more bytes than the declared when we created the entry

                try (InputStream fin = Files.newInputStream(file.toPath());
                     BoundedInputStream in = new BoundedInputStream(fin, size)) {
                    // Separate try block not to wrap exception thrown while opening the input stream into an exception
                    // indicating a problem while writing
                    try {
                        int len;
                        while ((len = in.read(buf)) >= 0) {
                            tar.write(buf, 0, len);
                        }
                    } catch (IOException | InvalidPathException e) {// log the exception in any case
                        throw new IOException("Error writing to tar file from: " + file, e);
                    }
                }
            }
        } finally { // always close the entry
            tar.closeArchiveEntry();
        }
        entriesWritten++;
    }

}