public class DateUtil {
	public static String dateToString(Date date, String dateFromat) {
		SimpleDateFormat formatter = new SimpleDateFormat(dateFromat);
		return formatter.format(date).toString();
	}

	public Date addTimeOffset(Date date, int mins) {
		if (date == null) {
			return date;
		}
		long t = date.getTime();
		Date newDate = new Date(t + (mins * 60000));
		return newDate;
	}

    public Date getDateFromNow(int days, int hours, int minutes) {
		Calendar cal = Calendar.getInstance();
		cal.add(Calendar.DATE, days);
		cal.add(Calendar.HOUR, hours);
		cal.add(Calendar.MINUTE, minutes);
		return cal.getTime();
    }

	public static Date getLocalDateForUTCDate(Date date) {
		Calendar local  = Calendar.getInstance();
		int      offset = local.getTimeZone().getOffset(local.getTimeInMillis());
		GregorianCalendar utc = new GregorianCalendar();
		utc.setTimeInMillis(date.getTime());
		utc.add(Calendar.MILLISECOND, offset);
		return utc.getTime();
	}

	public static Date getUTCDate(long epoh) {
		if(epoh==0){
			return null;
		}
		try{
			Calendar local=Calendar.getInstance();
		    int offset = local.getTimeZone().getOffset(epoh);
		    GregorianCalendar utc = new GregorianCalendar(gmtTimeZone);
		    utc.setTimeInMillis(epoh);
		    utc.add(Calendar.MILLISECOND, -offset);	   
		    return utc.getTime();
	    }catch(Exception ex){
	    	return null;
	    }	    		
	}

	public Date getDateFromGivenDate(Date date, int days, int hours,int minutes, int second) {
		Calendar cal = Calendar.getInstance();
		cal.setTime(date);
		cal.add(Calendar.DATE, days);
		cal.add(Calendar.HOUR, hours);
		cal.add(Calendar.MINUTE, minutes);
		cal.add(Calendar.SECOND, second);
		return cal.getTime();
	}

	public static Date stringToDate(String dateString, String dateFromat){
		SimpleDateFormat simpleDateFormat = null;
		Date date = null;
		if(!StringUtils.isEmpty(dateString) && !StringUtils.isEmpty(dateFromat)){
			try{
				simpleDateFormat = new SimpleDateFormat(dateFromat);
				date = simpleDateFormat.parse(dateString);
			}catch(Exception ex){
				return null;
			}
		}
	    return date;
	  }

}