public class JdbcScimGroupExternalMembershipManager {
    @Override
    public List<ScimGroupExternalMember> getExternalGroupMapsByGroupId(final String groupId,
                                                                       final String origin)
        throws ScimResourceNotFoundException {
        scimGroupProvisioning.retrieve(groupId);
        return jdbcTemplate.query(GET_EXTERNAL_GROUP_MAPPINGS_SQL, new PreparedStatementSetter() {
            @Override
            public void setValues(PreparedStatement ps) throws SQLException {
                ps.setString(1, IdentityZoneHolder.get().getId());
                ps.setString(2, groupId);
                ps.setString(3, origin);
            }
        }, rowMapper);
    }

            public void setValues(PreparedStatement ps) throws SQLException {
                ps.setString(1, IdentityZoneHolder.get().getId());
                ps.setString(2, origin);
                ps.setString(3, externalGroup);

            }

    @Override
    public List<ScimGroupExternalMember> getExternalGroupMapsByGroupName(final String groupName,
                                                                         final String origin)
        throws ScimResourceNotFoundException {

        final List<ScimGroup> groups = scimGroupProvisioning.query(String.format("displayName eq \"%s\"", groupName));

        if (null != groups && groups.size() > 0) {
            return jdbcTemplate.query(GET_EXTERNAL_GROUP_MAPPINGS_SQL, new PreparedStatementSetter() {
                @Override
                public void setValues(PreparedStatement ps) throws SQLException {
                    ps.setString(1, IdentityZoneHolder.get().getId());
                    ps.setString(2, groups.get(0).getId());
                    ps.setString(3, origin);
                }
            }, rowMapper);
        } else {
            return null;
        }
    }

    @Override
    public List<ScimGroupExternalMember> getExternalGroupMapsByExternalGroup(final String externalGroup,
                                                                             final String origin)
        throws ScimResourceNotFoundException {

        return jdbcTemplate.query(GET_GROUPS_BY_EXTERNAL_GROUP_MAPPING_SQL, new PreparedStatementSetter() {
            @Override
            public void setValues(PreparedStatement ps) throws SQLException {
                ps.setString(1, IdentityZoneHolder.get().getId());
                ps.setString(2, origin);
                ps.setString(3, externalGroup);

            }
        }, rowMapper);
    }

    private ScimGroupExternalMember getExternalGroupMap(final String groupId,
                                                        final String externalGroup,
                                                        final String origin)
                    throws ScimResourceNotFoundException {
        try {
            ScimGroupExternalMember u = jdbcTemplate.queryForObject(GET_GROUPS_WITH_EXTERNAL_GROUP_MAPPINGS_SQL,
                                                                    rowMapper,
                                                                    IdentityZoneHolder.get().getId(),
                                                                    groupId,
                                                                    origin,
                                                                    externalGroup);
            return u;
        } catch (EmptyResultDataAccessException e) {
            throw new ScimResourceNotFoundException("The mapping between groupId " + groupId + " and external group "
                            + externalGroup + " does not exist");
        }
    }

}