public class SchedulingPullActions {
    protected <T extends Job> void schedule(final Class<T> reference, final Map<String, Object> jobMap)
            throws JobExecutionException {

        @SuppressWarnings("unchecked")
        T jobInstance = (T) ApplicationContextProvider.getBeanFactory().
                createBean(reference, AbstractBeanDefinition.AUTOWIRE_BY_TYPE, false);
        String jobName = getClass().getName() + UUID_GENERATOR.generate();

        jobMap.put(JobManager.DOMAIN_KEY, AuthContextUtils.getDomain());

        ApplicationContextProvider.getBeanFactory().registerSingleton(jobName, jobInstance);

        JobBuilder jobDetailBuilder = JobBuilder.newJob(reference).
                withIdentity(jobName).
                usingJobData(new JobDataMap(jobMap));

        TriggerBuilder<Trigger> triggerBuilder = TriggerBuilder.newTrigger().
                withIdentity(JobNamer.getTriggerName(jobName)).
                startNow();

        try {
            scheduler.getScheduler().scheduleJob(jobDetailBuilder.build(), triggerBuilder.build());
        } catch (SchedulerException e) {
            throw new JobExecutionException("Could not schedule, aborting", e);
        }
    }

}