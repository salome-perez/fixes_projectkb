public class CamelRouteLoader {
    private void loadRoutes(
            final String domain, final DataSource dataSource, final Resource resource, final AnyTypeKind anyTypeKind) {

        JdbcTemplate jdbcTemplate = new JdbcTemplate(dataSource);
        boolean shouldLoadRoutes = jdbcTemplate.queryForList(
                String.format("SELECT * FROM %s WHERE ANYTYPEKIND = ?", CamelRoute.class.getSimpleName()),
                new Object[] { anyTypeKind.name() }).
                isEmpty();

        if (shouldLoadRoutes) {
            try {
                TransformerFactory tf = null;
                DOMImplementationLS domImpl = null;
                NodeList routeNodes;
                if (IS_JBOSS) {
                    tf = TransformerFactory.newInstance();
                    tf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
                    tf.setURIResolver(new VoidURIResolver());

                    Document doc = StaxUtils.read(resource.getInputStream());

                    routeNodes = doc.getDocumentElement().getElementsByTagName("route");
                } else {
                    DOMImplementationRegistry reg = DOMImplementationRegistry.newInstance();
                    domImpl = (DOMImplementationLS) reg.getDOMImplementation("LS");
                    LSInput lsinput = domImpl.createLSInput();
                    lsinput.setByteStream(resource.getInputStream());

                    LSParser parser = domImpl.createLSParser(DOMImplementationLS.MODE_SYNCHRONOUS, null);

                    routeNodes = parser.parse(lsinput).getDocumentElement().getElementsByTagName("route");
                }

                for (int s = 0; s < routeNodes.getLength(); s++) {
                    Node routeElement = routeNodes.item(s);
                    String routeContent = IS_JBOSS
                            ? nodeToString(routeNodes.item(s), tf)
                            : nodeToString(routeNodes.item(s), domImpl);
                    String routeId = ((Element) routeElement).getAttribute("id");

                    jdbcTemplate.update(
                            String.format("INSERT INTO %s(ID, ANYTYPEKIND, CONTENT) VALUES (?, ?, ?)",
                                    CamelRoute.class.getSimpleName()),
                            new Object[] { routeId, anyTypeKind.name(), routeContent });
                    LOG.info("[{}] Route successfully loaded: {}", domain, routeId);
                }
            } catch (Exception e) {
                LOG.error("[{}] Route load failed", domain, e);
            }
        }
    }

}