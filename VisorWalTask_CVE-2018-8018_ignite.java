public class VisorWalTask {
        Collection<String> deleteUnusedWalSegments(
            GridCacheDatabaseSharedManager dbMgr,
            FileWriteAheadLogManager wal
        ) throws IgniteCheckedException {
            WALPointer lowBoundForTruncate = dbMgr.checkpointHistory().firstCheckpointPointer();

            if (lowBoundForTruncate == null)
                return Collections.emptyList();

            int maxIdx = resolveMaxReservedIndex(wal, lowBoundForTruncate);

            File[] walFiles = getWalArchiveDir().listFiles(WAL_ARCHIVE_FILE_FILTER);

            dbMgr.onWalTruncated(lowBoundForTruncate);

            int num = wal.truncate(null, lowBoundForTruncate);

            if (walFiles != null) {
                sortWalFiles(walFiles);

                Collection<String> res = new ArrayList<>(num);

                for (File walFile: walFiles) {
                    if (getIndex(walFile) < maxIdx && num > 0)
                        res.add(walFile.getAbsolutePath());
                    else
                        break;

                    num--;
                }

                return res;
            }
            else
                return Collections.emptyList();

        }

        Collection<String> getUnusedWalSegments(
            GridCacheDatabaseSharedManager dbMgr,
            FileWriteAheadLogManager wal
        ) throws IgniteCheckedException{
            WALPointer lowBoundForTruncate = dbMgr.checkpointHistory().firstCheckpointPointer();

            if (lowBoundForTruncate == null)
                return Collections.emptyList();

            int maxIdx = resolveMaxReservedIndex(wal, lowBoundForTruncate);

            File[] walFiles = getWalArchiveDir().listFiles(WAL_ARCHIVE_FILE_FILTER);

            Collection<String> res = new ArrayList<>(walFiles != null && walFiles.length > 0 ? walFiles.length - 1 : 0);

            if(walFiles != null && walFiles.length > 0) {
                sortWalFiles(walFiles);

                // Obtain index of last archived WAL segment, it will not be deleted.
                long lastArchIdx = getIndex(walFiles[walFiles.length - 1]);

                for (File f : walFiles) {
                    long fileIdx = getIndex(f);

                    if (fileIdx < maxIdx && fileIdx < lastArchIdx)
                        res.add(f.getAbsolutePath());
                    else
                        break;
                }
            }

            return res;
        }

}