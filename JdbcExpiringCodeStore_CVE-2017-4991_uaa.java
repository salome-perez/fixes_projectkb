public class JdbcExpiringCodeStore {
    @Override
    public ExpiringCode retrieveCode(String code) {
        cleanExpiredEntries();

        if (code == null) {
            throw new NullPointerException();
        }

        try {
            ExpiringCode expiringCode = jdbcTemplate.queryForObject(selectAllFields, rowMapper, zonifyCode(code));
            if (expiringCode != null) {
                jdbcTemplate.update(delete, zonifyCode(code));
            }
            if (expiringCode.getExpiresAt().getTime() < System.currentTimeMillis()) {
                expiringCode = null;
            }
            return expiringCode;
        } catch (EmptyResultDataAccessException x) {
            return null;
        }
    }

        @Override
        public ExpiringCode mapRow(ResultSet rs, int rowNum) throws SQLException {
            String code = extractCode(rs.getString("code"));
            Timestamp expiresAt = new Timestamp(rs.getLong("expiresat"));
            String intent = rs.getString("intent");
            String data = rs.getString("data");
            return new ExpiringCode(code, expiresAt, data, intent);
        }

    @Override
    public ExpiringCode generateCode(String data, Timestamp expiresAt, String intent) {
        cleanExpiredEntries();

        if (data == null || expiresAt == null) {
            throw new NullPointerException();
        }

        if (expiresAt.getTime() < System.currentTimeMillis()) {
            throw new IllegalArgumentException();
        }

        int count = 0;
        while (count < 3) {
            count++;
            String code = generator.generate();
            try {
                int update = jdbcTemplate.update(insert, zonifyCode(code), expiresAt.getTime(), data, intent);
                if (update == 1) {
                    ExpiringCode expiringCode = new ExpiringCode(code, expiresAt, data, intent);
                    return expiringCode;
                } else {
                    logger.warn("Unable to store expiring code:" + code);
                }
            } catch (DataIntegrityViolationException x) {
                if (count == 3) {
                    throw x;
                }
            }
        }

        return null;
    }

    @Override
    public void expireByIntent(String intent) {
        Assert.hasText(intent);

        jdbcTemplate.update(deleteIntent, intent, zonifyCode("%")+"%");
    }

}