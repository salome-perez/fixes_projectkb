public class XfaForm {
    public void fillXfaForm(Node node, boolean readOnly) {
    	if (readOnly) {
        	NodeList nodeList = domDocument.getElementsByTagName("field");
        	for (int i = 0; i < nodeList.getLength(); i++) {
    			((Element)nodeList.item(i)).setAttribute("access", "readOnly");
    		}
    	}
        NodeList allChilds = datasetsNode.getChildNodes();
        int len = allChilds.getLength();
        Node data = null;
        for (int k = 0; k < len; ++k) {
            Node n = allChilds.item(k);
            if (n.getNodeType() == Node.ELEMENT_NODE && n.getLocalName().equals("data") && XFA_DATA_SCHEMA.equals(n.getNamespaceURI())) {
                data = n;
                break;
            }
        }
        if (data == null) {
            data = datasetsNode.getOwnerDocument().createElementNS(XFA_DATA_SCHEMA, "xfa:data");
            datasetsNode.appendChild(data);
        }
		NodeList list = data.getChildNodes();
		if (list.getLength() == 0) {
			data.appendChild(domDocument.importNode(node, true));
		}
		else {
// There's a possibility that first child node of XFA data is not an ELEMENT but simply a TEXT. In this case data will be duplicated.
//			data.replaceChild(domDocument.importNode(node, true), data.getFirstChild());
            Node firstNode = getFirstElementNode(data);
            if (firstNode != null)
                data.replaceChild(domDocument.importNode(node, true), firstNode);
		}
        extractNodes();
		setChanged(true);
    }

}