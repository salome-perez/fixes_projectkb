public class GooglePlayBuildStepDescriptor {
    public ListBoxModel doFillGoogleCredentialsIdItems(@AncestorInPath Item item) {
        // Only allow enumerating credentials if we have the appropriate permission
        if (item == null || !item.hasPermission(EXTENDED_READ)) {
            return new ListBoxModel();
        }

        ListBoxModel credentials = GoogleRobotCredentials.getCredentialsListBox(GooglePlayPublisher.class);
        if (credentials.isEmpty()) {
            credentials.add("(No Google Play account credentials have been added to Jenkins)", null);
        }
        return credentials;
    }

    public FormValidation doCheckGoogleCredentialsId(@AncestorInPath Item item, @QueryParameter String value) {
        // Only allow validating the existence of credentials if we have the appropriate permission
        if (item == null || !item.hasPermission(EXTENDED_READ)) {
            return FormValidation.ok();
        }

        // Complain if no credentials have been set up
        ListBoxModel credentials = GoogleRobotCredentials.getCredentialsListBox(GooglePlayPublisher.class);
        if (credentials.isEmpty()) {
            return FormValidation.error("You must add at least one Google Service Account via the Credentials page");
        }

        // Don't validate value if it hasn't been set, or looks like an expression
        if (value == null || value.isEmpty() || value.matches("\\$\\{[A-Za-z0-9_]+}")) {
            return FormValidation.ok();
        }

        // Otherwise, attempt to load the given credential to see whether it has been set up correctly
        try {
            new CredentialsHandler(value).getServiceAccountCredentials();
        } catch (EphemeralCredentialsException e) {
            // Loading the credential (apparently) goes online, so we may get ephemeral connectivity problems
            return FormValidation.warning(e.getMessage());
        } catch (UploadException e) {
            return FormValidation.error(e.getMessage());
        }

        // Everything is fine
        return FormValidation.ok();
    }

}