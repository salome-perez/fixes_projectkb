public class JsonInterpolationService {
  public Map<String, Object> interpolateCredHubReferences(
      UserContext userContext,
      Map<String, Object> servicesMap,
      List<EventAuditRecordParameters> eventAuditRecordParametersList
  ) {

    for (Object serviceProperties : servicesMap.values()) {
      if (serviceProperties == null || !(serviceProperties instanceof ArrayList)) {
        continue;
      }
      for (Object properties : (ArrayList) serviceProperties) {
        if (!(properties instanceof Map)) {
          continue;
        }
        Map<String, Object> propertiesMap = (Map) properties;
        Object credentials = propertiesMap.get("credentials");
        if (credentials == null || !(credentials instanceof Map)) {
          continue;
        }
        // Allow either snake_case or kebab-case
        Object credhubRef = ((Map) credentials).get("credhub_ref");
        if (credhubRef == null) {
          credhubRef = ((Map) credentials).get("credhub-ref");
        }

        if (credhubRef == null || !(credhubRef instanceof String)) {
          continue;
        }
        String credentialName = getCredentialNameFromRef((String) credhubRef);

        Credential credential = credentialHandler.getMostRecentCredentialVersion(
            userContext,
            eventAuditRecordParametersList,
            credentialName
        );

        if (credential instanceof JsonCredential) {
          propertiesMap.put("credentials", ((JsonCredential) credential).getValue());
        } else {
          throw new ParameterizedValidationException("error.interpolation.invalid_type",
              credentialName);
        }
      }
    }
    return servicesMap;
  }

}