public class ResourceLinkFactory {
    @Override
    public Object getObjectInstance(Object obj, Name name, Context nameCtx,
            Hashtable<?,?> environment) throws NamingException {

        if (!(obj instanceof ResourceLinkRef)) {
            return null;
        }

        // Can we process this request?
        Reference ref = (Reference) obj;

        // Read the global ref addr
        String globalName = null;
        RefAddr refAddr = ref.get(ResourceLinkRef.GLOBALNAME);
        if (refAddr != null) {
            globalName = refAddr.getContent().toString();
            // When running under a security manager confirm that the current
            // web application has really been configured to access the specified
            // global resource
            if (!validateGlobalResourceAccess(globalName)) {
                return null;
            }
            Object result = null;
            result = globalContext.lookup(globalName);
            // Check the expected type
            String expectedClassName = ref.getClassName();
            try {
                Class<?> expectedClazz = Class.forName(
                        expectedClassName, true, Thread.currentThread().getContextClassLoader());
                if (!expectedClazz.isAssignableFrom(result.getClass())) {
                    throw new IllegalArgumentException();
                }
            } catch (ClassNotFoundException e) {
                throw new IllegalStateException(e);
            }
            return result;
        }

        return null;
    }

}