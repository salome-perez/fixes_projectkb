public class FileExchangeRateProvider {
  @Override
  public boolean reload() throws SolrException {
    Map<String, Map<String, Double>> tmpRates = new HashMap<>();
    log.debug("Reloading exchange rates from file {}", currencyConfigFile);

    try {
      Document doc = SafeXMLParsing.parseConfigXML(log, loader, currencyConfigFile);
      XPathFactory xpathFactory = XPathFactory.newInstance();
      XPath xpath = xpathFactory.newXPath();
      
      // Parse exchange rates.
      NodeList nodes = (NodeList) xpath.evaluate("/currencyConfig/rates/rate", doc, XPathConstants.NODESET);
      
      for (int i = 0; i < nodes.getLength(); i++) {
        Node rateNode = nodes.item(i);
        NamedNodeMap attributes = rateNode.getAttributes();
        Node from = attributes.getNamedItem("from");
        Node to = attributes.getNamedItem("to");
        Node rate = attributes.getNamedItem("rate");
        
        if (from == null || to == null || rate == null) {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Exchange rate missing attributes (required: from, to, rate) " + rateNode);
        }
        
        String fromCurrency = from.getNodeValue();
        String toCurrency = to.getNodeValue();
        Double exchangeRate;
        
        if (null == CurrencyFieldType.getCurrency(fromCurrency)) {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Specified 'from' currency not supported in this JVM: " + fromCurrency);
        }
        if (null == CurrencyFieldType.getCurrency(toCurrency)) {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Specified 'to' currency not supported in this JVM: " + toCurrency);
        }
        
        try {
          exchangeRate = Double.parseDouble(rate.getNodeValue());
        } catch (NumberFormatException e) {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Could not parse exchange rate: " + rateNode, e);
        }
        
        addRate(tmpRates, fromCurrency, toCurrency, exchangeRate);
      }
    } catch (SAXException | IOException | XPathExpressionException e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Error while parsing currency configuration file "+currencyConfigFile, e);
    }
    // Atomically swap in the new rates map, if it loaded successfully
    this.rates = tmpRates;
    return true;
  }

}