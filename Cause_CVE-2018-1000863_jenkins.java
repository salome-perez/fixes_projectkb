public class Cause {
        @Nonnull
        private String getUserIdOrUnknown() {
            return  userId != null ? userId : User.getUnknown().getId();
        }

        @Override
        public void print(TaskListener listener) {
            listener.getLogger().println(Messages.Cause_UserIdCause_ShortDescription(
                    // TODO JENKINS-48467 - better to use ModelHyperlinkNote.encodeTo(User), or User.getUrl, since it handles URL escaping
                    ModelHyperlinkNote.encodeTo("/user/"+getUserIdOrUnknown(), getUserName())));
        }

        @Exported(visibility = 3)
        public String getUserName() {
            final User user = userId == null ? null : User.getById(userId, false);
            return user == null ? "anonymous" : user.getDisplayName();
        }

        public String getUserId() {
            return userId;
        }

        @Restricted(DoNotUse.class) // for Jelly
        @CheckForNull
        public String getUserUrl() {
            final User user = userId == null ? null : User.getById(userId, false);
            return user != null ? user.getUrl() : null;
        }

}