public class ZipUtil {
	public static boolean isZipStream(InputStream in) throws IOException {
		in.mark(MAGIC_NUMBER.length);
		byte[] fileHeader = IOUtil.readBytes(in, MAGIC_NUMBER.length);
		in.reset();
		return Arrays.equals(MAGIC_NUMBER, fileHeader);
	}

	public static void extract(ZipFile zipFile, File destDir) throws IOException {
		assert destDir.isDirectory();

		Enumeration<? extends ZipEntry> entries = zipFile.entries();
		while (entries.hasMoreElements()) {
			ZipEntry entry = entries.nextElement();
			writeEntry(zipFile, entry, destDir);
		}
	}

	public static void writeEntry(ZipFile zipFile, ZipEntry entry, File destDir) throws IOException {
		File outFile = new File(destDir, entry.getName());

		if (! outFile.getCanonicalFile().toPath().startsWith(destDir.toPath())) {
			throw new IOException("Zip entry outside destination directory: " + entry.getName());
		}
				
		if (entry.isDirectory()) {
			outFile.mkdirs();
		} else {
			outFile.getParentFile().mkdirs();

			try (InputStream in = zipFile.getInputStream(entry)) {
				IOUtil.writeStream(in, outFile);
			}
		}
	}

}