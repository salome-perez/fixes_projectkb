public class ACL {
    public final void checkPermission(@Nonnull Permission p) {
        Authentication a = Jenkins.getAuthentication();
        if (a == SYSTEM) {
            return;
        }
        if(!hasPermission(a,p))
            throw new AccessDeniedException2(a,p);
    }

    public final void checkCreatePermission(@Nonnull ViewGroup c,
                                            @Nonnull ViewDescriptor d) {
        Authentication a = Jenkins.getAuthentication();
        if (a == SYSTEM) {
            return;
        }
        if (!hasCreatePermission(a, c, d)) {
            throw new AccessDeniedException(Messages.AccessDeniedException2_MissingPermission(a.getName(),
                    View.CREATE.group.title + "/" + View.CREATE.name + View.CREATE + "/" + d.getDisplayName()));
        }
    }

            public boolean hasPermission(Authentication a, Permission permission) {
                return impl.apply(a, permission);
            }

}