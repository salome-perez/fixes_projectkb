public class SslUtils {
    private SSLContext looseTrustManagerSSLContext() {
        try {
            SSLContext sslContext = SSLContext.getInstance("TLS");
            sslContext.init(null, new TrustManager[] { new LooseTrustManager() }, new SecureRandom());
            return sslContext;
        } catch (NoSuchAlgorithmException e) {
           throw new ExceptionInInitializerError(e);
        } catch (KeyManagementException e) {
            throw new ExceptionInInitializerError(e);
        }
    }

    public static SslUtils getInstance() {
        return SingletonHolder.instance;
    }

    public SSLContext getSSLContext(boolean acceptAnyCertificate) throws GeneralSecurityException, IOException {
        return acceptAnyCertificate? looseTrustManagerSSLContext: SSLContext.getDefault();
    }

}