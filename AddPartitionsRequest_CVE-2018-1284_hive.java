public class AddPartitionsRequest {
    public void write(org.apache.thrift.protocol.TProtocol prot, AddPartitionsRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.dbName);
      oprot.writeString(struct.tblName);
      {
        oprot.writeI32(struct.parts.size());
        for (Partition _iter462 : struct.parts)
        {
          _iter462.write(oprot);
        }
      }
      oprot.writeBool(struct.ifNotExists);
      BitSet optionals = new BitSet();
      if (struct.isSetNeedResult()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetNeedResult()) {
        oprot.writeBool(struct.needResult);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AddPartitionsRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.dbName = iprot.readString();
      struct.setDbNameIsSet(true);
      struct.tblName = iprot.readString();
      struct.setTblNameIsSet(true);
      {
        org.apache.thrift.protocol.TList _list463 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
        struct.parts = new ArrayList<Partition>(_list463.size);
        Partition _elem464;
        for (int _i465 = 0; _i465 < _list463.size; ++_i465)
        {
          _elem464 = new Partition();
          _elem464.read(iprot);
          struct.parts.add(_elem464);
        }
      }
      struct.setPartsIsSet(true);
      struct.ifNotExists = iprot.readBool();
      struct.setIfNotExistsIsSet(true);
      BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        struct.needResult = iprot.readBool();
        struct.setNeedResultIsSet(true);
      }
    }

}