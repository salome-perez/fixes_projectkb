public class MetadataServlet {
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException,
        IOException {
        response.setContentType("text/xml; charset=utf-8");
        PrintWriter out = response.getWriter();
        
        ConfigService cs = (ConfigService)getApplicationContext().getBean("config");
        Idp idpConfig = cs.getIDP(realm);
        try {
            if (request.getServletPath() != null && request.getServletPath().startsWith("/metadata")) {
                String serviceRealm = 
                    request.getRequestURI().substring(request.getRequestURI().indexOf("/metadata")
                                                      + "/metadata".length());
                if (serviceRealm != null && serviceRealm.charAt(0) == '/') {
                    serviceRealm = serviceRealm.substring(1);
                }
                TrustedIdp trustedIdp = idpConfig.findTrustedIdp(serviceRealm);
                if (trustedIdp == null) {
                    LOG.error("No TrustedIdp found for desired realm: " + serviceRealm);
                    response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
                }
                ServiceMetadataWriter mw = new ServiceMetadataWriter();
                Document metadata = mw.getMetaData(idpConfig, trustedIdp);
                out.write(DOM2Writer.nodeToString(metadata));
            } else {
                // Otherwise return the Metadata for the Idp
                LOG.debug(idpConfig.toString());
                IdpMetadataWriter mw = new IdpMetadataWriter();
                Document metadata = mw.getMetaData(idpConfig);
                out.write(DOM2Writer.nodeToString(metadata));
            }
        } catch (Exception ex) {
            LOG.error("Failed to get metadata document: ", ex);
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
        }
    }

}