public class ExpressionIterator {
  @Override
  public void next(final int i) {
    iterator.next(i);
    
    // set aside a couple of addresses for the variables
    double val;
    double result;
    // this here is why life sucks. there MUST be a better way to bind variables
    long ts = Long.MAX_VALUE;
    for (final String variable : names) {
      if (iteration_results.get(variable)[i] == null) {
        context.set(variable, results.get(variable).getFillPolicy().getValue());
      } else {
        if (iteration_results.get(variable)[i].timestamp() < ts) {
          ts = iteration_results.get(variable)[i].timestamp();
        }
        val = iteration_results.get(variable)[i].toDouble();
        if (Double.isNaN(val)) {
          context.set(variable, results.get(variable).getFillPolicy().getValue());
        } else {
          context.set(variable, val);
        }
      }
    }
    final Object output = expression.execute(context);
    if (output instanceof Double) {
      result = (Double) output;
    } else if (output instanceof Boolean) {
      result = (((Boolean) output) ? 1 : 0);
    } else {
      throw new IllegalStateException("Expression returned a result of type: " 
          + output.getClass().getName() + " for " + this);
    }
    dps[i].reset(ts, result);
  }

}