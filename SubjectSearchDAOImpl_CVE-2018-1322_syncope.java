public class SubjectSearchDAOImpl {
    private OrderBySupport parseOrderBy(final SearchSupport svs, final List<OrderByClause> orderBy) {
        final AttributableUtil attrUtil = AttributableUtil.getInstance(svs.type.asAttributableType());

        OrderBySupport obs = new OrderBySupport();

        for (OrderByClause clause : filterOrderBy(orderBy)) {
            OrderBySupport.Item item = new OrderBySupport.Item();

            Field subjectField = ReflectionUtils.findField(attrUtil.attributableClass(), clause.getField());
            if (subjectField == null) {
                AbstractNormalSchema schema = schemaDAO.find(clause.getField(), attrUtil.schemaClass());
                if (schema != null) {
                    // keep track of involvement of non-mandatory schemas in the order by clauses
                    obs.nonMandatorySchemas = !"true".equals(schema.getMandatoryCondition());

                    if (schema.isUniqueConstraint()) {
                        obs.views.add(svs.uniqueAttr());

                        item.select = new StringBuilder().
                                append(svs.uniqueAttr().alias).append('.').append(svs.fieldName(schema.getType())).
                                append(" AS ").append(clause.getField()).toString();
                        item.where = new StringBuilder().
                                append(svs.uniqueAttr().alias).
                                append(".schema_name='").append(clause.getField()).append("'").toString();
                        item.orderBy = clause.getField() + " " + clause.getDirection().name();
                    } else {
                        obs.views.add(svs.attr());

                        item.select = new StringBuilder().
                                append(svs.attr().alias).append('.').append(svs.fieldName(schema.getType())).
                                append(" AS ").append(clause.getField()).toString();
                        item.where = new StringBuilder().
                                append(svs.attr().alias).
                                append(".schema_name='").append(clause.getField()).append("'").toString();
                        item.orderBy = clause.getField() + " " + clause.getDirection().name();
                    }
                }
            } else {
                obs.views.add(svs.field());

                item.select = svs.field().alias + "." + clause.getField();
                item.where = StringUtils.EMPTY;
                item.orderBy = svs.field().alias + "." + clause.getField() + " " + clause.getDirection().name();
            }

            if (item.isEmpty()) {
                LOG.warn("Cannot build any valid clause from {}", clause);
            } else {
                obs.items.add(item);
            }
        }

        return obs;
    }

}