public class UaaResetPasswordService {
    @Override
    public ForgotPasswordInfo forgotPassword(String email, String clientId, String redirectUri) {
        String jsonEmail = JsonUtils.writeValueAsString(email);
        List<ScimUser> results = scimUserProvisioning.query("userName eq " + jsonEmail + " and origin eq \"" + OriginKeys.UAA + "\"");
        if (results.isEmpty()) {
            results = scimUserProvisioning.query("userName eq " + jsonEmail);
            if (results.isEmpty()) {
                throw new NotFoundException();
            } else {
                throw new ConflictException(results.get(0).getId());
            }
        }
        ScimUser scimUser = results.get(0);

        PasswordChange change = new PasswordChange(scimUser.getId(), scimUser.getUserName(), scimUser.getPasswordLastModified(), clientId, redirectUri);
        String intent = FORGOT_PASSWORD_INTENT_PREFIX+scimUser.getId();
        expiringCodeStore.expireByIntent(intent);
        ExpiringCode code = expiringCodeStore.generateCode(JsonUtils.writeValueAsString(change), new Timestamp(System.currentTimeMillis() + PASSWORD_RESET_LIFETIME), intent);
        publish(new ResetPasswordRequestEvent(email, code.getCode(), SecurityContextHolder.getContext().getAuthentication()));
        return new ForgotPasswordInfo(scimUser.getId(), code);
    }

}