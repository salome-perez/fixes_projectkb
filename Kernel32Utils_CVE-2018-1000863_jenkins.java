public class Kernel32Utils {
    @Deprecated
    public static int getWin32FileAttributes(File file) throws IOException {
   	// allow lookup of paths longer than MAX_PATH
    	// http://msdn.microsoft.com/en-us/library/aa365247(v=VS.85).aspx
    	String canonicalPath = file.getCanonicalPath();
    	String path;
    	if(canonicalPath.length() < 260) {
    		// path is short, use as-is
    		path = canonicalPath;
    	} else if(canonicalPath.startsWith("\\\\")) {
    		// network share
    		// \\server\share --> \\?\UNC\server\share
    		path = "\\\\?\\UNC\\" + canonicalPath.substring(2);
    	} else {
    		// prefix, canonical path should be normalized and absolute so this should work.
    		path = "\\\\?\\" + canonicalPath;
    	}
      return Kernel32.INSTANCE.GetFileAttributesW(new WString(path));
    }

    @Deprecated
    public static boolean isJunctionOrSymlink(File file) throws IOException {
        return Util.isSymlink(file);
    }

    @Deprecated
    public static void createSymbolicLink(File symlink, String target, boolean dirLink) throws IOException {
        if (!Kernel32.INSTANCE.CreateSymbolicLinkW(
                new WString(symlink.getPath()), new WString(target),
                dirLink?Kernel32.SYMBOLIC_LINK_FLAG_DIRECTORY:0)) {
            throw new WinIOException("Failed to create a symlink "+symlink+" to "+target);
        }
    }

}