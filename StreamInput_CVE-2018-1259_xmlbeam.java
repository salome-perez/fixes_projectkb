public class StreamInput {
            public Document resolve(final Class<?>... resourceAwareClass) {
                try {
                    return StreamInput.this.readDocument();
                } catch (IOException e) {
                    throw new XBIOException(e);
                }
            }

    @Override
    public XPathEvaluator evalXPath(final String xpath) {
        return new DefaultXPathEvaluator(projector, new DocumentResolver() {
            @Override
            public Document resolve(final Class<?>... resourceAwareClass) {
                try {
                    return StreamInput.this.readDocument();
                } catch (IOException e) {
                    throw new XBIOException(e);
                }
            }
        }, xpath);
    }

    private Document readDocument() throws IOException {
        try {
            DocumentBuilder documentBuilder = projector.config().createDocumentBuilder();
            Document document = systemID == null ? documentBuilder.parse(is) : documentBuilder.parse(is, systemID);
            return document;
        } catch (SAXException e) {
            throw new XBDocumentParsingException(e);
        }
    }

}