public class DefaultJettyHttpBinding {
    protected Object extractResponseBody(Exchange exchange, JettyContentExchange httpExchange) throws IOException {
        Map<String, String> headers = getSimpleMap(httpExchange.getResponseHeaders());
        String contentType = headers.get(Exchange.CONTENT_TYPE);

        // if content type is serialized java object, then de-serialize it to a Java object
        if (contentType != null && HttpConstants.CONTENT_TYPE_JAVA_SERIALIZED_OBJECT.equals(contentType)) {
            // only deserialize java if allowed
            if (isAllowJavaSerializedObject() || isTransferException()) {
                try {
                    InputStream is = exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class, httpExchange.getResponseContentBytes());
                    return HttpHelper.deserializeJavaObjectFromStream(is, exchange.getContext());
                } catch (Exception e) {
                    throw new RuntimeCamelException("Cannot deserialize body to Java object", e);
                }
            } else {
                // empty body
                return null;
            }
        } else {
            // just grab the raw content body
            return httpExchange.getBody();
        }
    }

}