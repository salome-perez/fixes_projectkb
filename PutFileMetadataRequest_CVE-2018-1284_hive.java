public class PutFileMetadataRequest {
    public void write(org.apache.thrift.protocol.TProtocol prot, PutFileMetadataRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      {
        oprot.writeI32(struct.fileIds.size());
        for (long _iter744 : struct.fileIds)
        {
          oprot.writeI64(_iter744);
        }
      }
      {
        oprot.writeI32(struct.metadata.size());
        for (ByteBuffer _iter745 : struct.metadata)
        {
          oprot.writeBinary(_iter745);
        }
      }
      BitSet optionals = new BitSet();
      if (struct.isSetType()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetType()) {
        oprot.writeI32(struct.type.getValue());
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PutFileMetadataRequest struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TList _list746 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
        struct.fileIds = new ArrayList<Long>(_list746.size);
        long _elem747;
        for (int _i748 = 0; _i748 < _list746.size; ++_i748)
        {
          _elem747 = iprot.readI64();
          struct.fileIds.add(_elem747);
        }
      }
      struct.setFileIdsIsSet(true);
      {
        org.apache.thrift.protocol.TList _list749 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
        struct.metadata = new ArrayList<ByteBuffer>(_list749.size);
        ByteBuffer _elem750;
        for (int _i751 = 0; _i751 < _list749.size; ++_i751)
        {
          _elem750 = iprot.readBinary();
          struct.metadata.add(_elem750);
        }
      }
      struct.setMetadataIsSet(true);
      BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        struct.type = org.apache.hadoop.hive.metastore.api.FileMetadataExprType.findByValue(iprot.readI32());
        struct.setTypeIsSet(true);
      }
    }

}