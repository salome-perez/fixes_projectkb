public class PassiveRequestorValidator {
    public boolean isValidSignoutAddress(RequestContext context, String endpointAddress, String realm)
        throws Exception {
        if (endpointAddress == null) {
            return true;
        }

        Idp idpConfig = (Idp) WebUtils.getAttributeFromFlowScope(context, "idpConfig");
        if (idpConfig.isDisableLogoutAddressValidation()) {
            return true;
        }

        Application serviceConfig = idpConfig.findApplication(realm);
        if (serviceConfig == null) {
            LOG.warn("No service config found for " + realm);
            return false;
        }

        return validateSignoutEndpointAddress(serviceConfig, endpointAddress);
    }

    private boolean validateSigninEndpointAddress(Application serviceConfig, String endpointAddress) {
        if (serviceConfig.getPassiveRequestorEndpoint() == null
            && serviceConfig.getCompiledPassiveRequestorEndpointConstraint() == null) {
            LOG.error("Either the 'passiveRequestorEndpoint' or the 'passiveRequestorEndpointConstraint' "
                + "configuration values must be specified for the application");
        } else if (serviceConfig.getPassiveRequestorEndpoint() != null
            && serviceConfig.getPassiveRequestorEndpoint().equals(endpointAddress)) {
            LOG.debug("The supplied endpoint address {} matches the configured passive requestor endpoint value",
                      endpointAddress);
            return true;
        } else if (serviceConfig.getCompiledPassiveRequestorEndpointConstraint() != null) {
            Matcher matcher =
                serviceConfig.getCompiledPassiveRequestorEndpointConstraint().matcher(endpointAddress);
            if (matcher.matches()) {
                return true;
            } else {
                LOG.error("The endpointAddress value of {} does not match any of the passive requestor values",
                          endpointAddress);
            }
        }

        return false;
    }

}