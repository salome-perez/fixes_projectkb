public class ThriftHiveMetastore {
      public void write(org.apache.thrift.protocol.TProtocol prot, create_or_drop_wm_trigger_to_pool_mapping_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetO1()) {
          optionals.set(1);
        }
        if (struct.isSetO2()) {
          optionals.set(2);
        }
        if (struct.isSetO3()) {
          optionals.set(3);
        }
        if (struct.isSetO4()) {
          optionals.set(4);
        }
        oprot.writeBitSet(optionals, 5);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetO1()) {
          struct.o1.write(oprot);
        }
        if (struct.isSetO2()) {
          struct.o2.write(oprot);
        }
        if (struct.isSetO3()) {
          struct.o3.write(oprot);
        }
        if (struct.isSetO4()) {
          struct.o4.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, create_or_drop_wm_trigger_to_pool_mapping_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(5);
        if (incoming.get(0)) {
          struct.success = new WMCreateOrDropTriggerToPoolMappingResponse();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.o1 = new AlreadyExistsException();
          struct.o1.read(iprot);
          struct.setO1IsSet(true);
        }
        if (incoming.get(2)) {
          struct.o2 = new NoSuchObjectException();
          struct.o2.read(iprot);
          struct.setO2IsSet(true);
        }
        if (incoming.get(3)) {
          struct.o3 = new InvalidObjectException();
          struct.o3.read(iprot);
          struct.setO3IsSet(true);
        }
        if (incoming.get(4)) {
          struct.o4 = new MetaException();
          struct.o4.read(iprot);
          struct.setO4IsSet(true);
        }
      }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("getMetaConf", new getMetaConf());
      processMap.put("setMetaConf", new setMetaConf());
      processMap.put("create_database", new create_database());
      processMap.put("get_database", new get_database());
      processMap.put("drop_database", new drop_database());
      processMap.put("get_databases", new get_databases());
      processMap.put("get_all_databases", new get_all_databases());
      processMap.put("alter_database", new alter_database());
      processMap.put("get_type", new get_type());
      processMap.put("create_type", new create_type());
      processMap.put("drop_type", new drop_type());
      processMap.put("get_type_all", new get_type_all());
      processMap.put("get_fields", new get_fields());
      processMap.put("get_fields_with_environment_context", new get_fields_with_environment_context());
      processMap.put("get_schema", new get_schema());
      processMap.put("get_schema_with_environment_context", new get_schema_with_environment_context());
      processMap.put("create_table", new create_table());
      processMap.put("create_table_with_environment_context", new create_table_with_environment_context());
      processMap.put("create_table_with_constraints", new create_table_with_constraints());
      processMap.put("drop_constraint", new drop_constraint());
      processMap.put("add_primary_key", new add_primary_key());
      processMap.put("add_foreign_key", new add_foreign_key());
      processMap.put("add_unique_constraint", new add_unique_constraint());
      processMap.put("add_not_null_constraint", new add_not_null_constraint());
      processMap.put("add_default_constraint", new add_default_constraint());
      processMap.put("drop_table", new drop_table());
      processMap.put("drop_table_with_environment_context", new drop_table_with_environment_context());
      processMap.put("truncate_table", new truncate_table());
      processMap.put("get_tables", new get_tables());
      processMap.put("get_tables_by_type", new get_tables_by_type());
      processMap.put("get_materialized_views_for_rewriting", new get_materialized_views_for_rewriting());
      processMap.put("get_table_meta", new get_table_meta());
      processMap.put("get_all_tables", new get_all_tables());
      processMap.put("get_table", new get_table());
      processMap.put("get_table_objects_by_name", new get_table_objects_by_name());
      processMap.put("get_table_req", new get_table_req());
      processMap.put("get_table_objects_by_name_req", new get_table_objects_by_name_req());
      processMap.put("get_materialization_invalidation_info", new get_materialization_invalidation_info());
      processMap.put("update_creation_metadata", new update_creation_metadata());
      processMap.put("get_table_names_by_filter", new get_table_names_by_filter());
      processMap.put("alter_table", new alter_table());
      processMap.put("alter_table_with_environment_context", new alter_table_with_environment_context());
      processMap.put("alter_table_with_cascade", new alter_table_with_cascade());
      processMap.put("add_partition", new add_partition());
      processMap.put("add_partition_with_environment_context", new add_partition_with_environment_context());
      processMap.put("add_partitions", new add_partitions());
      processMap.put("add_partitions_pspec", new add_partitions_pspec());
      processMap.put("append_partition", new append_partition());
      processMap.put("add_partitions_req", new add_partitions_req());
      processMap.put("append_partition_with_environment_context", new append_partition_with_environment_context());
      processMap.put("append_partition_by_name", new append_partition_by_name());
      processMap.put("append_partition_by_name_with_environment_context", new append_partition_by_name_with_environment_context());
      processMap.put("drop_partition", new drop_partition());
      processMap.put("drop_partition_with_environment_context", new drop_partition_with_environment_context());
      processMap.put("drop_partition_by_name", new drop_partition_by_name());
      processMap.put("drop_partition_by_name_with_environment_context", new drop_partition_by_name_with_environment_context());
      processMap.put("drop_partitions_req", new drop_partitions_req());
      processMap.put("get_partition", new get_partition());
      processMap.put("exchange_partition", new exchange_partition());
      processMap.put("exchange_partitions", new exchange_partitions());
      processMap.put("get_partition_with_auth", new get_partition_with_auth());
      processMap.put("get_partition_by_name", new get_partition_by_name());
      processMap.put("get_partitions", new get_partitions());
      processMap.put("get_partitions_with_auth", new get_partitions_with_auth());
      processMap.put("get_partitions_pspec", new get_partitions_pspec());
      processMap.put("get_partition_names", new get_partition_names());
      processMap.put("get_partition_values", new get_partition_values());
      processMap.put("get_partitions_ps", new get_partitions_ps());
      processMap.put("get_partitions_ps_with_auth", new get_partitions_ps_with_auth());
      processMap.put("get_partition_names_ps", new get_partition_names_ps());
      processMap.put("get_partitions_by_filter", new get_partitions_by_filter());
      processMap.put("get_part_specs_by_filter", new get_part_specs_by_filter());
      processMap.put("get_partitions_by_expr", new get_partitions_by_expr());
      processMap.put("get_num_partitions_by_filter", new get_num_partitions_by_filter());
      processMap.put("get_partitions_by_names", new get_partitions_by_names());
      processMap.put("alter_partition", new alter_partition());
      processMap.put("alter_partitions", new alter_partitions());
      processMap.put("alter_partitions_with_environment_context", new alter_partitions_with_environment_context());
      processMap.put("alter_partition_with_environment_context", new alter_partition_with_environment_context());
      processMap.put("rename_partition", new rename_partition());
      processMap.put("partition_name_has_valid_characters", new partition_name_has_valid_characters());
      processMap.put("get_config_value", new get_config_value());
      processMap.put("partition_name_to_vals", new partition_name_to_vals());
      processMap.put("partition_name_to_spec", new partition_name_to_spec());
      processMap.put("markPartitionForEvent", new markPartitionForEvent());
      processMap.put("isPartitionMarkedForEvent", new isPartitionMarkedForEvent());
      processMap.put("get_primary_keys", new get_primary_keys());
      processMap.put("get_foreign_keys", new get_foreign_keys());
      processMap.put("get_unique_constraints", new get_unique_constraints());
      processMap.put("get_not_null_constraints", new get_not_null_constraints());
      processMap.put("get_default_constraints", new get_default_constraints());
      processMap.put("update_table_column_statistics", new update_table_column_statistics());
      processMap.put("update_partition_column_statistics", new update_partition_column_statistics());
      processMap.put("get_table_column_statistics", new get_table_column_statistics());
      processMap.put("get_partition_column_statistics", new get_partition_column_statistics());
      processMap.put("get_table_statistics_req", new get_table_statistics_req());
      processMap.put("get_partitions_statistics_req", new get_partitions_statistics_req());
      processMap.put("get_aggr_stats_for", new get_aggr_stats_for());
      processMap.put("set_aggr_stats_for", new set_aggr_stats_for());
      processMap.put("delete_partition_column_statistics", new delete_partition_column_statistics());
      processMap.put("delete_table_column_statistics", new delete_table_column_statistics());
      processMap.put("create_function", new create_function());
      processMap.put("drop_function", new drop_function());
      processMap.put("alter_function", new alter_function());
      processMap.put("get_functions", new get_functions());
      processMap.put("get_function", new get_function());
      processMap.put("get_all_functions", new get_all_functions());
      processMap.put("create_role", new create_role());
      processMap.put("drop_role", new drop_role());
      processMap.put("get_role_names", new get_role_names());
      processMap.put("grant_role", new grant_role());
      processMap.put("revoke_role", new revoke_role());
      processMap.put("list_roles", new list_roles());
      processMap.put("grant_revoke_role", new grant_revoke_role());
      processMap.put("get_principals_in_role", new get_principals_in_role());
      processMap.put("get_role_grants_for_principal", new get_role_grants_for_principal());
      processMap.put("get_privilege_set", new get_privilege_set());
      processMap.put("list_privileges", new list_privileges());
      processMap.put("grant_privileges", new grant_privileges());
      processMap.put("revoke_privileges", new revoke_privileges());
      processMap.put("grant_revoke_privileges", new grant_revoke_privileges());
      processMap.put("set_ugi", new set_ugi());
      processMap.put("get_delegation_token", new get_delegation_token());
      processMap.put("renew_delegation_token", new renew_delegation_token());
      processMap.put("cancel_delegation_token", new cancel_delegation_token());
      processMap.put("add_token", new add_token());
      processMap.put("remove_token", new remove_token());
      processMap.put("get_token", new get_token());
      processMap.put("get_all_token_identifiers", new get_all_token_identifiers());
      processMap.put("add_master_key", new add_master_key());
      processMap.put("update_master_key", new update_master_key());
      processMap.put("remove_master_key", new remove_master_key());
      processMap.put("get_master_keys", new get_master_keys());
      processMap.put("get_open_txns", new get_open_txns());
      processMap.put("get_open_txns_info", new get_open_txns_info());
      processMap.put("open_txns", new open_txns());
      processMap.put("abort_txn", new abort_txn());
      processMap.put("abort_txns", new abort_txns());
      processMap.put("commit_txn", new commit_txn());
      processMap.put("get_valid_write_ids", new get_valid_write_ids());
      processMap.put("allocate_table_write_ids", new allocate_table_write_ids());
      processMap.put("lock", new lock());
      processMap.put("check_lock", new check_lock());
      processMap.put("unlock", new unlock());
      processMap.put("show_locks", new show_locks());
      processMap.put("heartbeat", new heartbeat());
      processMap.put("heartbeat_txn_range", new heartbeat_txn_range());
      processMap.put("compact", new compact());
      processMap.put("compact2", new compact2());
      processMap.put("show_compact", new show_compact());
      processMap.put("add_dynamic_partitions", new add_dynamic_partitions());
      processMap.put("get_next_notification", new get_next_notification());
      processMap.put("get_current_notificationEventId", new get_current_notificationEventId());
      processMap.put("get_notification_events_count", new get_notification_events_count());
      processMap.put("fire_listener_event", new fire_listener_event());
      processMap.put("flushCache", new flushCache());
      processMap.put("cm_recycle", new cm_recycle());
      processMap.put("get_file_metadata_by_expr", new get_file_metadata_by_expr());
      processMap.put("get_file_metadata", new get_file_metadata());
      processMap.put("put_file_metadata", new put_file_metadata());
      processMap.put("clear_file_metadata", new clear_file_metadata());
      processMap.put("cache_file_metadata", new cache_file_metadata());
      processMap.put("get_metastore_db_uuid", new get_metastore_db_uuid());
      processMap.put("create_resource_plan", new create_resource_plan());
      processMap.put("get_resource_plan", new get_resource_plan());
      processMap.put("get_active_resource_plan", new get_active_resource_plan());
      processMap.put("get_all_resource_plans", new get_all_resource_plans());
      processMap.put("alter_resource_plan", new alter_resource_plan());
      processMap.put("validate_resource_plan", new validate_resource_plan());
      processMap.put("drop_resource_plan", new drop_resource_plan());
      processMap.put("create_wm_trigger", new create_wm_trigger());
      processMap.put("alter_wm_trigger", new alter_wm_trigger());
      processMap.put("drop_wm_trigger", new drop_wm_trigger());
      processMap.put("get_triggers_for_resourceplan", new get_triggers_for_resourceplan());
      processMap.put("create_wm_pool", new create_wm_pool());
      processMap.put("alter_wm_pool", new alter_wm_pool());
      processMap.put("drop_wm_pool", new drop_wm_pool());
      processMap.put("create_or_update_wm_mapping", new create_or_update_wm_mapping());
      processMap.put("drop_wm_mapping", new drop_wm_mapping());
      processMap.put("create_or_drop_wm_trigger_to_pool_mapping", new create_or_drop_wm_trigger_to_pool_mapping());
      return processMap;
    }

}