public class ExtensionList {
    public static @Nonnull <U> U lookupSingleton(Class<U> type) {
        ExtensionList<U> all = lookup(type);
        if (all.size() != 1) {
            throw new IllegalStateException("Expected 1 instance of " + type.getName() + " but got " + all.size());
        }
        return all.get(0);
    }

    public static <T> ExtensionList<T> create(Jenkins jenkins, Class<T> type) {
        if(type.getAnnotation(LegacyInstancesAreScopedToHudson.class)!=null)
            return new ExtensionList<T>(jenkins,type);
        else {
            return new ExtensionList(jenkins, type, staticLegacyInstances.computeIfAbsent(type, key -> new CopyOnWriteArrayList()));
        }
    }

}