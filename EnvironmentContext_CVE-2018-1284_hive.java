public class EnvironmentContext {
    public void write(org.apache.thrift.protocol.TProtocol prot, EnvironmentContext struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetProperties()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetProperties()) {
        {
          oprot.writeI32(struct.properties.size());
          for (Map.Entry<String, String> _iter307 : struct.properties.entrySet())
          {
            oprot.writeString(_iter307.getKey());
            oprot.writeString(_iter307.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, EnvironmentContext struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TMap _map308 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.properties = new HashMap<String,String>(2*_map308.size);
          String _key309;
          String _val310;
          for (int _i311 = 0; _i311 < _map308.size; ++_i311)
          {
            _key309 = iprot.readString();
            _val310 = iprot.readString();
            struct.properties.put(_key309, _val310);
          }
        }
        struct.setPropertiesIsSet(true);
      }
    }

}