public class AsyncHttpClientConfig {
        public AsyncHttpClientConfig build() {

            if (reaper == null) {
                reaper = Executors.newScheduledThreadPool(Runtime.getRuntime().availableProcessors(), new ThreadFactory() {
                    public Thread newThread(Runnable r) {
                        Thread t = new Thread(r, "AsyncHttpClient-Reaper");
                        t.setDaemon(true);
                        return t;
                    }
                });
            }

            if (proxyServerSelector == null && useProxySelector) {
                proxyServerSelector = ProxyUtils.getJdkDefaultProxyServerSelector();
            }

            if (proxyServerSelector == null && useProxyProperties) {
                proxyServerSelector = ProxyUtils.createProxyServerSelector(System.getProperties());
            }

            if (proxyServerSelector == null) {
                proxyServerSelector = ProxyServerSelector.NO_PROXY_SELECTOR;
            }

            return new AsyncHttpClientConfig(maxTotalConnections, //
                    maxConnectionPerHost, //
                    connectionTimeOutInMs, //
                    webSocketIdleTimeoutInMs, //
                    idleConnectionInPoolTimeoutInMs, //
                    idleConnectionTimeoutInMs, //
                    requestTimeoutInMs, //
                    maxConnectionLifeTimeInMs, //
                    redirectEnabled, //
                    maxRedirects, //
                    compressionEnabled, //
                    userAgent, //
                    allowPoolingConnection, //
                    reaper, //
                    applicationThreadPool, //
                    proxyServerSelector, //
                    sslContext, //
                    sslEngineFactory, //
                    providerConfig, //
                    realm, //
                    requestFilters, //
                    responseFilters, //
                    ioExceptionFilters, //
                    requestCompressionLevel, //
                    maxRequestRetry, //
                    allowSslConnectionPool, //
                    useRawUrl, //
                    removeQueryParamOnRedirect, //
                    hostnameVerifier, //
                    ioThreadMultiplier, //
                    strict302Handling, //
                    useRelativeURIsWithSSLProxies, //
                    spdyEnabled, //
                    spdyInitialWindowSize, //
                    spdyMaxConcurrentStreams, //
                    timeConverter, //
                    acceptAnyCertificate);
        }

}