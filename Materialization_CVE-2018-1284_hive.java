public class Materialization {
    public void write(org.apache.thrift.protocol.TProtocol prot, Materialization struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      {
        oprot.writeI32(struct.tablesUsed.size());
        for (String _iter796 : struct.tablesUsed)
        {
          oprot.writeString(_iter796);
        }
      }
      oprot.writeI64(struct.invalidationTime);
      BitSet optionals = new BitSet();
      if (struct.isSetValidTxnList()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetValidTxnList()) {
        oprot.writeString(struct.validTxnList);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Materialization struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TSet _set797 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
        struct.tablesUsed = new HashSet<String>(2*_set797.size);
        String _elem798;
        for (int _i799 = 0; _i799 < _set797.size; ++_i799)
        {
          _elem798 = iprot.readString();
          struct.tablesUsed.add(_elem798);
        }
      }
      struct.setTablesUsedIsSet(true);
      struct.invalidationTime = iprot.readI64();
      struct.setInvalidationTimeIsSet(true);
      BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        struct.validTxnList = iprot.readString();
        struct.setValidTxnListIsSet(true);
      }
    }

}