public class ReceivedTokenCallbackHandler {
    private Element getTokenFromMessage(SoapMessage soapMessage) {
        if (soapMessage != null) {
            List<WSHandlerResult> results =
                CastUtils.cast((List<?>)soapMessage.get(WSHandlerConstants.RECV_RESULTS));
            if (results != null) {
                for (WSHandlerResult handlerResult : results) {
                    Element token = getTokenFromResults(handlerResult);
                    if (token != null) {
                        return token;
                    }
                }
            }
        }
        return null;
    }

    protected boolean skipResult(Integer resultPriority, WSSecurityEngineResult result) {
        Object binarySecurity = result.get(WSSecurityEngineResult.TAG_BINARY_SECURITY_TOKEN);

        return resultPriority == WSConstants.BST
            && (binarySecurity instanceof X509Security || binarySecurity instanceof PKIPathSecurity);
    }

    private Element getTokenFromResults(WSHandlerResult handlerResult) {
        // Now go through the results in a certain order. Highest priority is first.
        Map<Integer, List<WSSecurityEngineResult>> actionResults = handlerResult.getActionResults();
        for (Integer resultPriority : securityPriorities) {
            List<WSSecurityEngineResult> foundResults = actionResults.get(resultPriority);
            if (foundResults != null && !foundResults.isEmpty()) {
                for (WSSecurityEngineResult result : foundResults) {

                    if (!skipResult(resultPriority, result)) {
                        // First check for a transformed token
                        Object transformedToken = result.get(WSSecurityEngineResult.TAG_TRANSFORMED_TOKEN);
                        if (useTransformedToken && transformedToken instanceof SamlAssertionWrapper) {
                            return ((SamlAssertionWrapper)transformedToken).getElement();
                        }

                        if (result.get(WSSecurityEngineResult.TAG_TOKEN_ELEMENT) != null) {
                            return (Element)result.get(WSSecurityEngineResult.TAG_TOKEN_ELEMENT);
                        }
                    }
                }
            }
        }

        return null;
    }

}