public class XStreamWireFormat {
    protected XStream createXStream() {
        final XStream xstream = XStreamSupport.createXStream();
        xstream.ignoreUnknownElements();
        xstream.registerConverter(new Converter() {
            final Converter delegate = xstream.getConverterLookup().lookupConverterForType(ByteSequence.class);
            @Override
            public void marshal(Object o, HierarchicalStreamWriter hierarchicalStreamWriter, MarshallingContext marshallingContext) {
                ByteSequence byteSequence = (ByteSequence)o;
                byteSequence.compact();
                delegate.marshal(byteSequence, hierarchicalStreamWriter, marshallingContext);
            }

            @Override
            public Object unmarshal(HierarchicalStreamReader hierarchicalStreamReader, UnmarshallingContext unmarshallingContext) {
                return delegate.unmarshal(hierarchicalStreamReader, unmarshallingContext);
            }

            @Override
            public boolean canConvert(Class aClass) {
                return aClass == ByteSequence.class;
            }
        });
        return xstream;
    }

}